匿名函数
=================


* lambda
    >>> a=lambda x: x + 1
    >>> a(1)
    2
    >>> a=lambda x: x * x
    >>> a(9)
    81
* map
    map()函数接收两个参数，一个是函数，一个是序列，map将传入的函数依次作用到序列的每个元素，并把结果作为新的list返回。

    >>> map(str, [1, 2, 3, 4, 5, 6, 7, 8, 9])
    ['1', '2', '3', '4', '5', '6', '7', '8', '9']
* reduce
    reduce把一个函数作用在一个序列[x1, x2, x3...]上，这个函数必须接收两个参数，reduce把结果继续和序列的下一个元素做累积计算

    >>> l = [1, 2,3,4,5,6]
    >>> reduce(lambda x, y: x+y, l)
    21
    >>> reduce(lambda x, y: x*10+y, l)
    123456
* filter
    filter()也接收一个函数和一个序列。和map()不同的时，filter()把传入的函数依次作用于每个元素，然后根据返回值是True还是False决定保留还是丢弃该元素.

    >>> l = [1, 2,3,4,5,6]
    >>> filter(lambda x: x % 2 == 1, l)
    [1, 3, 5]
